#!/usr/bin/env python

"""
Example script to demonstrate the memory
leak in the Python interface to Datascope

@author    Rob Newman <robertlnewman@gmail.com> 858.822.1333
@version   0.1
@license   MIT style license
@modified  2011-07-12
@notes     1. Requires demo database
"""

import sys
import os
sys.path.append('%s/local/data/python/antelope' % os.environ['ANTELOPE'])
import datascope
from time import time, gmtime

try:
    from guppy import hpy
except ImportError:
    print "Cannot load Guppy PE module. Debugging output repressed"
    heapy_loaded = False
else:
    heapy_loaded = True
    # Init heapy
    hp = hpy()

fields = ['snet', 'fsta', 'sta', 'chan', 'ondate', 'ctype', 'edepth', 'hang', 'vang']


def update():
    """Print relative memory statistics
    and consumption since last cycle
    """
    print hp.heap()
    hp.setref()

def infinite_loop():
    """Make an infinite
    loop to demostrate 
    Python memory blow up
    """
    while True:
        dbpath = '%s/demo/socalif/db/scdemo' % os.environ['ANTELOPE']
        db = datascope.dbopen(dbpath, 'r')
        db.lookup('', 'snetsta', '', '')
        db.join('sitechan')
        db.sort(('snet','sta'))
        db.group('sta')
        for i in range(db.query('dbRECORD_COUNT')):
            db[3] = i
            sub_sta = db.getv('sta')[0]
            db_sub = datascope.dbsubset(db, 'sta=~/%s' % sub_sta)
            db_sub.ungroup()
            for j in range(db_sub.query('dbRECORD_COUNT')):
                db_sub[3] = j
                for f in fields:
                    value = db_sub.getv(f)[0]
                if heapy_loaded:
                    update()
            db_sub.free()
        db.free()

def main():
    """Open up demo database
    tables and group, then 
    run infinite loop
    """
    infinite_loop()

if __name__ == '__main__':
    main()
